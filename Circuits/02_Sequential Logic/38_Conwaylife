module top_module(
    input clk,
    input load,
    input [255:0] data,
    output [255:0] q ); 
    
    integer i;
    reg [3:0] cout;
    
    always @(posedge clk) begin
        if (load) begin
            q <= data;
        end
        else begin
            for(i=0;i<256;i++)begin
                if(i == 0) begin
            		cout = q[240]+q[241]+q[1]+q[17]+q[16]+q[31]+q[15]+q[255];
        		end
        		else if(i == 15) begin
            		cout = q[0]+q[16]+q[31]+q[30]+q[14]+q[254]+q[255]+q[240];
        		end
                else if(i == 240) begin
            		cout = q[239]+q[224]+q[225]+q[241]+q[1]+q[0]+q[15]+q[255];
        		end
                else if(i == 255) begin
            		cout = q[238]+q[239]+q[224]+q[240]+q[0]+q[15]+q[14]+q[254];
        		end
                else if(i>0 && i<15) begin
                    cout = q[i-1]+q[i+1]+q[i+17]+q[i+16]+q[i+15]+q[i+239]+q[i+240]+q[i+241];
                end        
                else if(i>240 && i<255) begin
                    cout = q[i-1]+q[i+1]+q[i-17]+q[i-16]+q[i-15]+q[i-240]+q[i-239]+q[i-241];
                end               
                else if(i%16 == 0) begin
                    cout = q[i-1]+q[i-16]+q[i-15]+q[i+1]+q[i+17]+q[i+16]+q[i+31]+q[i+15];
                end
                else if(i%16 == 15) begin
                    cout = q[i-1]+q[i-17]+q[i-16]+q[i-31]+q[i-15]+q[i+1]+q[i+16]+q[i+15];
                end
                else begin
                    cout = q[i-17]+q[i-16]+q[i-15]+q[i+1]+q[i+17]+q[i+16]+q[i+15]+q[i-1];
                end
                case(cout)
                    4'd2:q[i] <= q[i];
                    4'd3:q[i] <= 1'b1;
                    default:q[i] <= 1'b0;
                endcase
            end
        end
    end
                    

endmodule
